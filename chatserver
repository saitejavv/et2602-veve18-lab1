#!/usr/bin/python3
import socket
import sys
from _thread import *
import select 
import re 

if len(sys.argv)!=2:
    print("Correct Script on server side")
    sys.exit()

Main_Server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
Main_Server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)


Command = (sys.argv[1])
c=Command.split(':')
ip_address=str(c[0])
port=int(c[1])

Main_Server.bind((ip_address,port))

Main_Server.listen(100)

print('Server is up and running. Client can connect ')


clients=[]
clients.append(Main_Server)

def clientthread(conn,addr):
    while True:
        
        try:
            nick=conn.recv(2048).decode('utf-8')
            nick1=nick.strip('NICK ')
            recomp = re.compile('[@!#$%^&*()?/|}:]')
            
            if(recomp.search(nick1) == None) and len(nick1)<=12 and 'NICK ' in nick :
                conn.sendall('OK'.encode('utf-8'))
                break
            elif len(nick1) or recomp.search(nick1) != None:
                conn.sendall('Oops! something wrong in nick name'.encode('utf-8'))
            else:
                conn.close()
                print(addr[0]+" is Disconnected")
                clients.remove(conn)
                del clients[conn]
                break
        except :
                break

        

    while True:
        try:
            if conn in clients:
                info = conn.recv(2048).decode('utf-8')
                msg1=info.strip('message_from ')
                
            
                if not info:
                    conn.close()
                    print(addr[0]+" has disconnected")
                    clients.remove(conn)
                    break 

                elif 'message_from ' not in info:
                    conn.sendall('ERROR in info'.encode('utf-8'))
                else:

                
                    if len(msg1)<=255 :
                    
                        count=0
                        for i in msg1[:-1]:
                            if ord(i)<31:
                            
                                count = count +1
                            
                            else:
                                pass
                    #else if and next elif        
                        if count != 0:
                            conn.sendall('Oops! characters are not supposed to be used'.encode('utf-8'))
                        else:
                            sending_msg = 'message_from '+nick1+' ' + msg1[:-1]
                
                            broadcasting(sending_msg,conn,nick1)
                    elif len(msg1) > 255 :
                        conn.sendall('Oops message length is more than 256 characters'.encode('utf-8'))
                   
                

        except KeyboardInterrupt:
            conn.close()
            break

def broadcasting(info,connection,nick1):
    for sockets in clients:
        if sockets!= Main_Server:
            try:
                sockets.sendall(info.encode('utf-8'))
            except KeyboardInterrupt:
                    clients.remove(sockets)
                    break 



while True:
    conn,addr=Main_Server.accept()
    
    conn.sendall('Hello 1'.encode('utf-8'))
    clients.append(conn)
    print(addr[0]+" has connected")
    
    start_new_thread(clientthread,(conn,addr))
    

conn.close()
Main_Server.close()     

